Principal(){
  num a : 8;
 do {
  num c : 0;
  for(num i : 0; i < getLength("hola"); i = i + 1) {
    num b :inNum("Ingrese valor",50);
    c = b;
    if(c == i)then{
      break;
    } else {
      if(b == 20) then{
        break;
      }else{
        if(b == 25)then{
        continue;
        } else {
          continue;
          c = 100;
        }
      }
    }
    c = 200;
  }
    a=a+1;
    if(a==11)then{
      break;
    }
  } while(a<15)
}

------------------------------------------------------------------------------
Principal(){
  num a : 8;
do {
    for(num i :0; i<a;i = i+1){
    num b :inNum("Ingrese valor",50);
          outStr(i+'');
          if(i==5)then{
               break;
          }else{
               if(i==4)then{
                   continue;
                    i=10;
               }

          }
    }
    num b :inNum("Ingrese valor",50);
    if(b == 20) then{
      break;
    }else{
      if(b == 25)then{
      continue;
      }
    }
    a=a+1;
  } while(a<10)
}
------------------------------------------------------------------------------

Principal(){
  num a : 40 * 8;
  Nodo n;
  array : x [1..6][9..7][21..35] of num;
  for(num i : 0; i<5; i = i + 3){
    str x:"hola"+ 50.3;
    str y: 725.91 + " Adios";
    if(4>0 && 8 < 99*8) then {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
    }else{
      bool flag : true;
    }
  }
}
str : funcion(num par1, num par3){
  num a : 40 * 8;
  a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
  for(num i : 0; 3<5; i = 4 + 3){
    %%str x:"hola";
    array : x [1..6][9..7][21..35] of bool;
    if(4>0 && 8 < 99*8) then {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
    }else{
      bool flag : true;
    }
  }
}

----------------------FUNCION CON RETRONO Y ASIGNACION DEL RETORNO------------
Principal(){
  num a : 40 * 8;
  loop a {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
      break a;
  }
  Nodo n : create(Nodo);
  outStr(n.cadena);
 a = fun1(a, n);
  outStr(n.cadena);
}

num: fun1(num x, Nodo nod1){
  x = x / 10;
  nod1.valor = 73;
  nod1.cadena = "cadena dentro de fun1";
return x;
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  for(num i : 0; i<5; i = i + 1){
    a = a + i;
  }
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  num x : a / 4;
  str cad : "cadena inicial";
  if(x < a) then{
    cad = "verdadero";
  } else {
    cad = "falso";
  }
}
------------------------------------------------------------------------------
Principal(){
  Arbol raiz : create(Arbol);
  num x;
  x = raiz.izq;
}

------------------------------------------------------------------------------
Arbol  y,ar,ar2 : 19;
Principal(){
  Arbol raiz : 5;
  num x;
  x = raiz.izq;
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  if(4>0 && 8 < 99*8) then {
    a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
  }else{
    bool flag : true;
  }
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  while(3 > 4){
    if(4>0 && 8 < 99*8) then {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
    }else{
      bool flag : true;
    }
  }
}
------------------------------------------------------------------------------
Principal(){
  num a : 0;
  do {
      a =  a + 2;
  } while( 8 >= a*2 && true)
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  repeat {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
  } until(3 > 4)
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  for(num a = 3 * 4 / 9 ^ (3+3); 7 - 9 > 8 * 6; a = 96 * 2 / 3 ) {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
  }
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  count(10) {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
  }
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  loop a {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
      break a;
  }
  Nodo n : create(Nodo);
  fun1(a, n);
  outStr(n.cadena);
}

void : fun1(num x, Nodo nod1){
  x = x / 10;
  nod1.valor = 73;
  nod1.cadena = "cadena dentro de fun1";
}

------------------------------------------------------------------------------
str a;
Principal(){
%%Arbol ar : create(Arbol);
%%ar.raiz = create(Nodo);
str b;
num c : 2332423;
inStr(a,"inStr para una varible global 'a'" + " no se" + c);
inStr(b,"inStr para una varible local 'b'");
}
----------------------------------ELEMENTOS-----------------------------------
element : Nodo {
	num valor : 15*4;
	str cadena : "hola";
	Nodo izq : NULL;
	Nodo der :NULL;
        element : Nodo12 {
	num valor : 15*4;
	str cadena : "hola";
	Nodo izq : NULL;
	Nodo der :NULL;
}
}

element : Nodo2 {
	num valor : 15*4;
	str cadena : "hola";
	Nodo izq : NULL;
	Nodo der :NULL;
  element : Nodo22 {
  	num valor : 15*4;
  	str cadena : "hola";
  	Nodo izq : NULL;
  	Nodo der :NULL;
  }
}

element : Arbol{
  element : Nodo {
    num valor : 15*4;
    str cadena : "hola";
    Nodo izq : NULL;
    Nodo der :NULL;
  }
  Nodo izq : NULL;
  str titulo : "Sin titulo";
}

element : Arbol{
  element : Nodo {
    num valor : 15*4;
    str cadena : "'Cadena de Nodo dentro de arbol!'";
    Nodo izq : NULL;
    Nodo der :NULL;
  }
  Nodo raiz : NULL;
  str titulo : "Sin titulo";
}

Principal(){
  num a : 40 * 8;
  nodo n;
  array : x [1..6][9..7][21..35] of num;
  for(num i : 0; i<5; i = i + 3){
    %%str x:"hola";
    if(4>0 && 8 < 99*8) then {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
    }else{
      bool flag : true;
    }
  }
}
str : funcion(num par1, num par3){
  num a : 40 * 8;
  a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
  for(num i : 0; 3<5; i = 4 + 3){
    %%str x:"hola";
    array : x [1..6][9..7][21..35] of bool;
    if(4>0 && 8 < 99*8) then {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
    }else{
      bool flag : true;
    }
  }
}

------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  for(num i : 0; 3<5; i = 1 + 3){
    str x:"hola";
    if(4>0 && 8 < 99*8) then {
      bool flag3 : true;
    }else{
      bool flag : true;
      if(4>0 && 8 < 99*8) then {
        bool flag2 : true;
        a = 3 * 8 ^ a +3 -7 / (-3 + 6);
    }
    }
  }
}
------------------------------------------------------------------------------
Principal(){
  Arbol raiz : create(Arbol);
  num x;
  x = raiz.izq;
}

------------------------------------------------------------------------------
Arbol  y,ar,ar2 : 19;
Principal(){
  Arbol raiz : 5;
  num x;
  x = raiz.izq;
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  if(4>0 && 8 < 99*8) then {
    a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
  }else{
    bool flag : true;
  }
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  while(3 > 4){
    if(4>0 && 8 < 99*8) then {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
    }else{
      bool flag : true;
    }
  }
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  do {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
  } while(3 > 4)
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  repeat {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
  } until(3 > 4)
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  for(num a = 3 * 4 / 9 ^ (3+3); 7 - 9 > 8 * 6; a = 96 * 2 / 3 ) {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
  }
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  count(10) {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
  }
}
------------------------------------------------------------------------------
Principal(){
  num a : 40 * 8;
  loop a {
      a = 3 * 8 ^ 6 +3 -7 / (-3 + 6);
  }
}
----------------------------------ELEMENTOS-----------------------------------
element : Nodo {
	num valor : 15*4;
	str cadena : "hola";
	Nodo izq : NULL;
	Nodo der :NULL;
        element : Nodo12 {
	num valor : 15*4;
	str cadena : "hola";
	Nodo izq : NULL;
	Nodo der :NULL;
}
}

element : Nodo2 {
	num valor : 15*4;
	str cadena : "hola";
	Nodo izq : NULL;
	Nodo der :NULL;
  element : Nodo22 {
  	num valor : 15*4;
  	str cadena : "hola";
  	Nodo izq : NULL;
  	Nodo der :NULL;
  }
}

element : Arbol{
  element : Nodo {
    num valor : 15*4;
    str cadena : "hola";
    Nodo izq : NULL;
    Nodo der :NULL;
  }
  Nodo izq : NULL;
  str titulo : "Sin titulo";
}
